{
  "dependencies": {
    "assert": "1.4.1",
    "async": "2.0.0-rc.5",
    "bignumber.js": "4.0.1",
    "command-line-args": "3.0.1",
    "command-line-usage": "3.0.3",
    "datejs": "1.0.0-rc3",
    "ethereumjs-abi": "0.6.4",
    "ethereumjs-testrpc": "1.2.1",
    "ethereumjs-tx": "1.1.1",
    "ethereumjs-util": "4.5.0",
    "fs": "0.0.2",
    "gaussian": "1.1.0",
    "js-sha256": "0.3.0",
    "keythereum": "0.4.10",
    "request": "2.82.0",
    "solc": "0.4.2",
    "stats-lite": "^2.0.4",
    "web3": "0.17.0-alpha"
  },
  "devDependencies": {
    "eslint": "3.18.0",
    "eslint-config-airbnb-base": "11.1.2",
    "eslint-plugin-import": "2.2.0"
  }
}
var shell = require('shelljs');
 
if (!shell.which('git')) {
  shell.echo('Sorry, this script requires git');
  shell.exit(1);
}
 
// Copy files to release dir
shell.rm('-rf', 'out/Release');
shell.cp('-R', 'stuff/', 'out/Release');
 
// Replace macros in each .js file
shell.cd('lib');
shell.ls('*.js').forEach(function (file) {
  shell.sed('-i', 'BUILD_VERSION', 'v0.1.2', file);
  shell.sed('-i', /^.*REMOVE_THIS_LINE.*$/, '', file);
  shell.sed('-i', /.*REPLACE_LINE_WITH_MACRO.*\n/, shell.cat('macro.js'), file);
});
shell.cd('..');
 
// Run external tool synchronously
if (shell.exec('git commit -am "Auto-commit"').code !== 0) {
  shell.echo('Error: Git commit failed');
  shell.exit(1);
}
